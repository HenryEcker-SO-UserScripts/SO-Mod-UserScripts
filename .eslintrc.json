{
  "env": {
    "browser": true,
    "commonjs": true,
    "node": true,
    "jquery": true,
    "greasemonkey": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "root": true,
  "rules": {
    "semi": "off",
    "no-extra-semi": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_(\\d+)?$",
        "varsIgnorePattern": "^_(\\d+)?$"
        // Ignore unused vars that are _, _0, _1, _2 (etc)
      }
    ],
    "func-style": [
      "error",
      "declaration",
      {
        "allowArrowFunctions": false
      }
    ],
    "@typescript-eslint/semi": [
      "error",
      "always"
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": true
        }
      }
    ],
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array"
      }
    ],
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "@typescript-eslint/consistent-type-definitions": [
      "error",
      "interface"
    ],
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "fixStyle": "inline-type-imports",
        "disallowTypeAnnotations": true
      }
    ],
    "no-duplicate-imports": "error",
    "@typescript-eslint/method-signature-style": [
      "error",
      "property"
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": [
          "strictCamelCase",
          "StrictPascalCase",
          "UPPER_CASE"
        ],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid",
        "filter": {
          "regex": "^_(\\d+)?$",
          // Ignore unused vars that are _, _0, _1, _2 (etc)
          "match": false
        }
      }
    ],
    "@typescript-eslint/no-confusing-void-expression": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-inferrable-types": [
      "error"
    ],
    "no-extra-parens": "off",
    "@typescript-eslint/no-extra-parens": [
      "error"
    ],
    "no-constant-condition": "warn"
  }
}